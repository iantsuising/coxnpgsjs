% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{SRMPLE}
\alias{SRMPLE}
\title{Non_monotone proximal gradient algorithm}
\usage{
SRMPLE(X,de,Z,betaini,k,tol=1e-3,maxiter=50)
}
\arguments{
\item{X}{a vector of observed time for the population}

\item{de}{a vector of censoring indicator for the population}

\item{Z}{a matrix of high-dimensional covariates}

\item{betaini}{a vector of initial beta after Lasso regularization}

\item{k}{a positive integar of sparsity constraints}

\item{tol}{a positive number for termination condition}

\item{maxiter}{a positive number for the maximum number of iterations before termination}
}
\value{
a list of remaining covariates index, estimated beta value after algorithm and number of iterations
}
\description{
SRMPLE is used to do joint feature screening for ultra-high Cox's model. It uses Lasso intializer and non-monotone proximal gradient algorithm which is more efficient than previous method.
}
\details{
Before SRMPLE, beta should go through Lasso algorithm to get a new intializer. The recommended value for k is floor(n/(3*log(n))). The value of k and tol is recommended to use our default value, but other pre-specified value is acceptable as well.
}
\examples{
n=120; p=10000;
Z <- matrix(rnorm(n*p),n,p);
betaini <- rep(0,p);
s=6;
betaini[1:s] <- c(-1.6328,1.3988,-1.6497,1.6353,-1.4209,1.7022);
T <- rexp(n,rate=exp(Z\%*\%betaini));
c0=5;
C <- runif(n,min=0,max=c0);
de <- as.numeric(T<=C);
X <- pmin(T,C);
k <- floor(n/(3*log(n)));
result <- SRMPLE(X,de,Z,betaini,k,tol=1e-3,maxiter=50);
}
